/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    genomic-medicine-sweden/nallo Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                        = null
    bed                          = null
    cadd_resources               = null
    cadd_prescored               = null
    par_regions                  = null
    tandem_repeats               = null
    trgt_repeats                 = null
    variant_catalog              = null
    reduced_penetrance           = null
    score_config_snv             = null
    snp_db                       = null
    variant_consequences_snv     = null
    vep_cache                    = null
    vep_plugin_files             = null
    hificnv_xy                   = null
    hificnv_xx                   = null
    hificnv_exclude              = null
    somalier_sites               = null

    // Skip parts of the workflow
    skip_assembly_wf             = params.preset == 'ONT_R10' ? true : false
    skip_call_paralogs           = false
    skip_cnv_calling             = false
    skip_mapping_wf              = false
    skip_methylation_wf          = params.preset == 'pacbio' ? true : false
    skip_phasing_wf              = false
    skip_qc                      = false
    skip_rank_variants           = false
    skip_repeat_calling          = params.preset == 'ONT_R10' ? true : false
    skip_repeat_annotation       = params.preset == 'ONT_R10' ? true : false
    skip_short_variant_calling   = false
    skip_snv_annotation          = false

    deepvariant_model_type       = params.preset == 'ONT_R10' ? 'ONT_R104' : 'PACBIO'
    minimap2_read_mapping_preset = params.preset == 'ONT_R10' ? 'lr:hq' : 'lr:hqae'
    phaser                       = 'longphase'
    sv_caller                    = 'severus'
    preset                       = 'revio'
    hifiasm_mode                 = 'hifi-only'
    variant_caller               = 'deepvariant'
    vep_cache_version            = 110

    // Test config options
    extra_modkit_options       = ''
    extra_vep_options          = ''
    extra_paraphase_options    = ''
    extra_hifiasm_options      = ''

    // Preprocessing/parallelisation
    parallel_snv               = 13
    parallel_alignments        = 1

    // References
    fasta                      = null

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null

    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/1f4e062926fc10f70a38e917e5771edb333e89bf/'

    // Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null


    // Schema validation default options
    validate_params            = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'genomic-medicine-sweden/nallo'
    author          = """Felix Lenner"""
    homePage        = 'https://github.com/genomic-medicine-sweden/nallo'
    description     = """Long-read variant calling pipeline"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.2'
    version         = '0.4.0dev'
    doi             = '10.5281/zenodo.13748210'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
\033[0;34m                                   _                              _ _      _
\033[0;34m   __ _  ___ _ __   ___  _ __ ___ (_) ___      _ __ ___   ___  __| (_) ___(_)_ __   ___
\033[0;34m  / _` |/ _ \\ '_ \\ / _ \\| '_ ` _ \\| |/ __|____| '_ ` _ \\ / _ \\/ _` | |/ __| | '_ \\ / _ \\_____
\033[0;34m | (_| |  __/ | | | (_) | | | | | | | (_|_____| | | | | |  __/ (_| | | (__| | | | |  __/_____|
\033[0;34m  \\__, |\\___|_| |_|\\___/|_| |_| |_|_|\\___|    |_| |_| |_|\\___|\\__,_|_|\\___|_|_| |_|\\___|
\033[0;34m  |___/      _____  __| | ___ _ __    / / __   __ _| | | ___
\033[0;34m / __\\ \\ /\\ / / _ \\/ _` |/ _ \\ '_ \\  / / '_ \\ / _` | | |/ _ \\
\033[0;34m \\__ \\\\ V  V /  __/ (_| |  __/ | | |/ /| | | | (_| | | | (_) |
\033[0;34m |___/ \\_/\\_/ \\___|\\__,_|\\___|_| |_/_/ |_| |_|\\__,_|_|_|\\___/
\033[0;34m
"""
        afterText = """${manifest.doi ? "* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "  https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework\n  https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies\n  https://github.com/${manifest.name}/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/base.config'
includeConfig 'conf/modules/annotate_cadd.config'
includeConfig 'conf/modules/annotate_consequence_pli.config'
includeConfig 'conf/modules/annotate_repeat_expansions.config'
includeConfig 'conf/modules/general.config'
includeConfig 'conf/modules/bam_infer_sex.config'
includeConfig 'conf/modules/call_paralogs.config'
includeConfig 'conf/modules/call_repeat_expansions.config'
includeConfig 'conf/modules/convert_input_files.config'
includeConfig 'conf/modules/assembly_variant_calling.config'
includeConfig 'conf/modules/genome_assembly.config'
includeConfig 'conf/modules/methylation.config'
includeConfig 'conf/modules/phasing.config'
includeConfig 'conf/modules/prepare_genome.config'
includeConfig 'conf/modules/qc_aligned_reads.config'
includeConfig 'conf/modules/scatter_genome.config'
includeConfig 'conf/modules/rank_variants.config'
includeConfig 'conf/modules/short_variant_calling.config'
includeConfig 'conf/modules/snv_annotation.config'
includeConfig 'conf/modules/call_svs.config'
includeConfig 'conf/modules/short_variant_calling.config'
includeConfig 'conf/modules/cnv.config'

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Call Paralogs
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */
    withName: '.*:CALL_PARALOGS:.*' {
        publishDir = [
            enabled: false,
        ]
    }
    withName: '.*:CALL_PARALOGS:PARAPHASE' {
        ext.args = { "${params.extra_paraphase_options}" }
        publishDir = [
            path: { "${params.outdir}/paraphase/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('.vcf') ? null : filename }
        ]
    }
    withName: '.*:CALL_PARALOGS:BCFTOOLS_MERGE_PER_FAMILY' {
        ext.args = [
            '--output-type z',
            '--write-index=tbi',
            '--force-single'
        ].join(' ')
        ext.prefix = { "${meta.family_id}_paraphase_merged" }
        publishDir = [
            path: { "${params.outdir}/paraphase/${meta.family_id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*:CALL_PARALOGS:BCFTOOLS_MERGE_PER_SAMPLE' {
        ext.args = [
            '--output-type z',
            '--write-index=tbi',
            '--force-single'
        ].join(' ')
        ext.prefix = { "${meta.id}_merged" }
    }
    withName: '.*:CALL_PARALOGS:BCFTOOLS_QUERY' {
        ext.args = '--list-samples'
    }
    withName: '.*:CALL_PARALOGS:BCFTOOLS_REHEADER' {
        ext.args2 = [
            '--output-type z',
            '--write-index=tbi'
        ].join(' ')
        ext.prefix = { "${meta.id}_paraphase" }
    }
    withName: '.*:CALL_PARALOGS:CREATE_SAMPLES_HAPLOTYPES_FILE' {
        ext.prefix = { "${meta.id}_samples_file" }
    }
    withName: '.*:CALL_PARALOGS:MERGE_JSON' {
        ext.prefix = { "${meta.family_id}" }
        publishDir = [
            path: { "${params.outdir}/paraphase/${meta.family_id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

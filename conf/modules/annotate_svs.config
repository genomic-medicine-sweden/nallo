/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Annotate SVs
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */

    withName: '.*:ANNOTATE_SVS:.*' {
        publishDir = [
            enabled: false,
        ]
    }

    withName: '.*ANNOTATE_SVS:ENSEMBLVEP_SV' {
        ext.prefix = { params.skip_cnv_calling ? "${meta.id}_svs_merged_annotated" : "${meta.id}_svs_cnvs_merged_annotated" }
        ext.args = { [
            "${params.extra_vep_options}",
            "--dir_plugins .",
            '--plugin pLI,pLI_values.txt',
            '--appris --biotype --buffer_size 100 --canonical --cache --ccds',
            '--compress_output bgzip --distance 5000 --domains',
            '--exclude_predicted --force_overwrite --format vcf',
            '--hgvs --humdiv --max_sv_size 248387328',
            '--no_progress --numbers --per_gene --polyphen p',
            '--protein --offline --sift p --regulatory',
            '--symbol --tsl --uniprot --vcf',
            '--no_stats'
        ].join(' ') }
        publishDir = [
            path: { "${params.outdir}/svs/family/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || !params.skip_rank_variants ? null : filename }
        ]
    }

    withName: '.*ANNOTATE_SVS:TABIX_ENSEMBLVEP_SV' {
        publishDir = [
            path: { "${params.outdir}/svs/family/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || !params.skip_rank_variants ? null : filename }
        ]
    }

}

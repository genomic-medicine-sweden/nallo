/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Short variant calling
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */

    withName: '.*:SHORT_VARIANT_CALLING:.*' {
        publishDir = [
            enabled: false,
        ]
    }

    withName: '.*:SHORT_VARIANT_CALLING:DEEPVARIANT' {

        if(params.preset == 'revio' | params.preset == 'pacbio') {
            ext.model_type = 'PACBIO'
        } else if(params.preset == 'ONT_R10') {
            ext.model_type = 'ONT_R104'
        }
    }

    withName: '.*:SHORT_VARIANT_CALLING:GLNEXUS' {
        ext.args = '--config DeepVariant_unfiltered'
        publishDir = [
            path: { "${params.outdir}/snv_calling/multi_sample/glnexus/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:SHORT_VARIANT_CALLING:BCFTOOLS_CONCAT_DV' {

        ext.args = '--allow-overlaps'

    }

    withName: '.*:SHORT_VARIANT_CALLING:BCFTOOLS_CONCAT_DV_VCF' {

        ext.args = '--allow-overlaps'

    }
    withName: '.*:SHORT_VARIANT_CALLING:BCFTOOLS_SORT_DV' {

        publishDir = [
            path: { "${params.outdir}/snv_calling/single_sample/deepvariant/gvcf/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*:SHORT_VARIANT_CALLING:BCFTOOLS_SORT_DV_VCF' {

        publishDir = [
            path: { "${params.outdir}/snv_calling/single_sample/deepvariant/vcf/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:SHORT_VARIANT_CALLING:TABIX_GLNEXUS' {

        publishDir = [
            path: { "${params.outdir}/snv_calling/multi_sample/glnexus/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

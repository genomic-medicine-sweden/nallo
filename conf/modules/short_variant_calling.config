/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Short variant calling
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */

    withName: '.*:SHORT_VARIANT_CALLING:.*' {
        publishDir = [
            enabled: false,
        ]
    }

    withName: '.*:SHORT_VARIANT_CALLING:DEEPVARIANT' {
        ext.prefix = { intervals ? "${meta.id}_${intervals}_deepvariant" : "${meta.id}_deepvariant" }
        ext.args = { [
            "--sample_name=${meta.id}",
            "--model_type=${params.deepvariant_model_type}",
            '-vcf_stats_report=False'
        ].join(' ') }
    }

    withName: '.*:SHORT_VARIANT_CALLING:GLNEXUS' {
        ext.args = '--config DeepVariant_unfiltered'
    }

    withName: '.*:SHORT_VARIANT_CALLING:BCFTOOLS_CONCAT_GVCF' {
        ext.args = '--allow-overlaps'
    }

    withName: '.*:SHORT_VARIANT_CALLING:BCFTOOLS_CONCAT_VCF' {
        ext.args = '--allow-overlaps'
    }

    withName: '.*:SHORT_VARIANT_CALLING:BCFTOOLS_SORT_GVCF' {
        ext.prefix = { "${vcf.simpleName}_sorted.g" }
        ext.args = [
            '--output-type z',
            '--write-index=tbi'
        ].join(' ')
        publishDir = [
            path: { "${params.outdir}/snv_calling/single_sample/deepvariant/gvcf/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:SHORT_VARIANT_CALLING:BCFTOOLS_SORT_VCF' {
        ext.prefix = { "${vcf.simpleName}_sorted" }
        ext.args = [
            '--output-type z',
            '--write-index=tbi'
        ].join(' ')
        publishDir = [
            path: { "${params.outdir}/snv_calling/single_sample/deepvariant/vcf/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:SHORT_VARIANT_CALLING:BCFTOOLS_FILLTAGS' {
        ext.prefix = { "${meta.id}_ac" }
        ext.args = '--output-type b'
    }

    withName: '.*:SHORT_VARIANT_CALLING:BCFTOOLS_NORM' {
        ext.args = [
            '-m -',
            '--output-type b',
            '--write-index=csi',
            '-w 10000'
        ].join(' ')
        publishDir = [
            path: { "${params.outdir}/snv_calling/multi_sample/glnexus/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml')? null : (meta.id == "multisample" ? filename : null)}
        ]
    }
}

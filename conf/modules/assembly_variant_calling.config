/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    withName: '.*:ASSEMBLY_VARIANT_CALLING:.*' {
        publishDir = [
            enabled: false
        ]
    }
    withName: '.*:ASSEMBLY_VARIANT_CALLING:MINIMAP2_INDEX' {
        ext.prefix = { "${meta.id}_aligned" }
        ext.args = '-x asm5'
    }
    withName: '.*:ASSEMBLY_VARIANT_CALLING:MINIMAP2_ALIGN' {
        ext.prefix = { "${meta.id}_aligned" }
        ext.args = [
            '--paf-no-hit',
            '--cs',
        ].join(' ')
    }
    withName: '.*:ASSEMBLY_VARIANT_CALLING:SAMTOOLS_VIEW' {
        ext.prefix = { "${meta.id}_filtered" }
        // Mimic default settings from samflt in dipcall.aux.js
        ext.args = [
            '--excl-flags SECONDARY',
            '--min-MQ 5',
            '--min-qlen 50000'
        ].join(' ')
    }
    withName: '.*:ASSEMBLY_VARIANT_CALLING:TAGBAM' {
        ext.prefix = { "${meta.id}_aligned_assembly_haplotype_${meta.haplotype}" }
        ext.args = { [
            '--tag HP',
            "--value ${meta.haplotype}"
        ].join(' ') }
        publishDir = [
            path: { "${params.outdir}/aligned_assemblies/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*:ASSEMBLY_VARIANT_CALLING:SAMTOOLS_INDEX' {
        publishDir = [
            path: { "${params.outdir}/aligned_assemblies/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

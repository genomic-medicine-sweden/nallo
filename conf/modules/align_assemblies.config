/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    withName: '.*:ALIGN_ASSEMBLIES:.*' {
        publishDir = [
            enabled: false
        ]
    }
    withName: '.*:ALIGN_ASSEMBLIES:MINIMAP2_INDEX' {
        ext.prefix = { "${meta.id}_assembly_index" }
        ext.args   = '-x asm5'
    }
    withName: '.*:ALIGN_ASSEMBLIES:MINIMAP2_ALIGN' {
        ext.prefix = { "${meta.id}_aligned_assembly_haplotype_${meta.haplotype}" }
    }
    withName: '.*:ALIGN_ASSEMBLIES:SAMTOOLS_VIEW' {
        ext.prefix = { "${meta.id}_aligned_assembly_haplotype_${meta.haplotype}_filtered" }
        ext.args   = [
            '--excl-flags SECONDARY',
            '--min-MQ 5',
            '--min-qlen 50000',
        ].join(' ')
    }
    withName: '.*:ALIGN_ASSEMBLIES:TAGBAM' {
        ext.prefix = { "${meta.id}_aligned_assembly_haplotype_${meta.haplotype}_filtered_tagged" }
        ext.args   = {
            [
                '--tag HP',
                "--value ${meta.haplotype}",
            ].join(' ')
        }
    }
    withName: '.*:ALIGN_ASSEMBLIES:SAMTOOLS_MERGE' {
        ext.prefix = { "${meta.id}_aligned_assembly" }
        ext.args   = '--write-index'
        publishDir = [
            path: { "${params.outdir}/assembly/sample/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || params.alignment_output_format == 'cram' ? null : filename },
        ]
    }

    withName: '.*:ALIGN_ASSEMBLIES:SAMTOOLS_CONVERT' {
        ext.prefix = { "${meta.id}_aligned_assembly" }
        ext.args   = '--write-index'
        publishDir = [
            path: { "${params.outdir}/assembly/sample/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
}

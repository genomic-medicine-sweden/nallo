/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SNV Annotation
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */

    withName: '.*:SNV_ANNOTATION:.*' {
        publishDir = [
            enabled: false,
        ]
    }

    withName: '.*:SNV_ANNOTATION:BCFTOOLS_NORM_SINGLESAMPLE' {
        ext.args = "-m - --output-type b -w 10000"
    }

    withName: '.*:SNV_ANNOTATION:ECHTVAR_ANNO' {

        publishDir = [
            path: { "${params.outdir}/snv_annotation/echtvar/anno/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:SNV_ANNOTATION:ECHTVAR_ENCODE' {

        publishDir = [
            path: { "${params.outdir}/snv_annotation/echtvar/encode/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*:SNV_ANNOTATION:ENSEMBLVEP_VEP' {

        ext.args = "--vcf"

        publishDir = [
            path: { "${params.outdir}/snv_annotation/ensemblvep/vep/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

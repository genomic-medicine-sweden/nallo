/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run genomic-medicine-sweden/nallo -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 2
    max_memory = '6.GB'
    max_time   = '6.h'

    // Input data

    // Genome references

    fasta = "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/nallo/reference/hg38.test.fa.gz"
    input = "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/nallo/testdata/samplesheet.csv"

    bed = "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/nallo/reference/test_data.bed"

    // HiFiCNV
    hificnv_xy      = "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/nallo/reference/expected_cn.hg38.XY.bed"
    hificnv_xx      = "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/nallo/reference/expected_cn.hg38.XX.bed"
    hificnv_exclude = "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/nallo/reference/empty.bed"

    // Dipcall
    dipcall_par = "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/nallo/reference/hs38.PAR.bed"

    // TRGT
    trgt_repeats = "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/nallo/reference/pathogenic_repeats.hg38.bed"

    // SNV Annotation
    vep_cache = "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/nallo/reference/vep_cache_test_data.tar.gz"
    snp_db    = "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/nallo/testdata/snp_dbs.csv"

    // Somalier
    somalier_sites = "https://raw.github.com/genomic-medicine-sweden/test-datasets/nallo/reference/somalier_sites.vcf.gz"

    parallel_snv = 3 // Create 3 parallel DeepVariant processes
    preset = "revio"

}

process {
    withName: '.*:NALLO:ASSEMBLY:HIFIASM' {

        ext.args = '-f0'
    }
    withName: '.*:NALLO:PHASING:WHATSHAP_PHASE' {

        ext.args = '--ignore-read-groups --indels --distrust-genotypes --include-homozygous'
    }

    withName: '.*:NALLO:PREPARE_GENOME:MINIMAP2_INDEX'  {

        if(params.preset == 'revio' | params.preset == 'pacbio') {
            ext.args = "-x map-hifi -I 2G"
        } else if(params.preset == 'ONT_R9' | params.preset == 'ONT_R10') {
            ext.args = "-x map-ont -I 2G"
        }
    }

    withName: '.*:NALLO:ASSEMBLY_VARIANT_CALLING:MINIMAP2_INDEX_DIPCALL' {

        ext.args = "-x asm5 -I 2G"
    }

    withName: '.*:NALLO:ALIGN_READS:MINIMAP2_ALIGN_UNSPLIT' {

        if(params.preset == 'revio' | params.preset == 'pacbio') {
            ext.args = "-y -x map-hifi --secondary=no -Y --split-prefix=tmp"
        } else if(params.preset == 'ONT_R9' | params.preset == 'ONT_R10') {
            ext.args = "-y -x map-ont --secondary=no -Y --split-prefix=tmp"
        }
    }

    withName: '.*:NALLO:ALIGN_READS:MINIMAP2_ALIGN_SPLIT' {

        if(params.preset == 'revio' | params.preset == 'pacbio') {
            ext.args = "-y -x map-hifi --secondary=no -Y --split-prefix=tmp"
        } else if(params.preset == 'ONT_R9' | params.preset == 'ONT_R10') {
            ext.args = "-y -x map-ont --secondary=no -Y --split-prefix=tmp"
        }
    }

    withName: '.*:NALLO:ASSEMBLY_VARIANT_CALLING:DIPCALL' {

        ext.args = '--split-prefix=tmp'

    }
}

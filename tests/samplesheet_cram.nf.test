nextflow_pipeline {

    name "Test pipeline GENOMICMEDICINESWEDEN_NALLO"
    script "../main.nf"
    tag "PIPELINE"

    test("test profile - CRAM output") {
        tag "samplesheet"

        when {
            params {
                pipelines_testdata_base_path = 'https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/914ac53d2a801418e1849d3f77c865aedc03959d/'
                input                        = params.pipelines_testdata_base_path + 'testdata/samplesheet.csv'
                outdir                       = "$outputDir"
                alignment_output_format      = 'cram'
            }
        }

        then {
            def fasta = params.pipelines_testdata_base_path + 'reference/hg38.test.fa'
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name       = getAllFilesFromDir(params.outdir, relative: true, includeDir: true, ignore: ['pipeline_info/*.{html,json,txt}'])
            // stable_path: All files in ${params.outdir}/ with stable content
            def stable_path       = getAllFilesFromDir(params.outdir, ignoreFile: 'tests/.nftignore')
            // bam_files: All bam files - should be empty
            def bam_files         = getAllFilesFromDir(params.outdir, include: ['**/*.bam'])
            // cram_files: All cram files
            def cram_files        = getAllFilesFromDir(params.outdir, include: ['**/*.cram'])
            // all_vcf_files: All vcf files - can have unstable variants and/or unstable headers
            def all_vcf_files     = getAllFilesFromDir(params.outdir, include: ['**/*.vcf.gz'])
            // stable_vcf_files: Vcf files with stable variants - can be snapshot using variantsMD5
            def stable_vcf_files  = getAllFilesFromDir(params.outdir, ignoreFile: 'tests/.nftignore_unstable_variants', include: ['**/*.vcf.gz'])
            assertAll(
                { assert workflow.success},
                { assert bam_files.isEmpty() }, // Make sure there are no BAM files
                { assert snapshot(
                    // Number of successful tasks
                    workflow.trace.succeeded().size(),
                    // pipeline versions.yml file for multiqc from which Nextflow version is removed because we tests pipelines on multiple Nextflow versions
                    removeNextflowVersion("$outputDir/pipeline_info/nallo_pipeline_software_mqc_versions.yml"),
                    // All stable path name, with a relative path
                    stable_name,
                    // All files with stable contents
                    stable_path,
                    // All bam files
                    cram_files.collect{ file -> [ file.getName(), cram(file.toString(), fasta).getReadsMD5() ] },
                    // All vcf files
                    all_vcf_files.collect{ file -> [ file.getName(), path(file.toString()).vcf.summary ] },
                    // Stable vcf files
                    stable_vcf_files.collect{ file -> [ file.getName(), path(file.toString()).vcf.variantsMD5 ] }
                ).match() }
            )
        }
    }

}

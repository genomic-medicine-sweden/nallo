/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run genomic-medicine-sweden/nallo -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/9e0f40af8fb3ab7f8a3daecaeb03a0acda1e464e/'
    modules_testdata_base_path   = 'https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/'

    // References
    input                     = "$projectDir/assets/samplesheet.csv"
    fasta                     = params.pipelines_testdata_base_path + 'reference/hg38.test.fa.gz'
    methylation_call_regions  = params.pipelines_testdata_base_path + 'reference/test_data.bed'
    filter_variants_hgnc_ids  = params.pipelines_testdata_base_path + 'testdata/hgnc_ids.tsv'
    hificnv_expected_xy_cn    = params.pipelines_testdata_base_path + 'reference/expected_cn.hg38.XY.bed'
    hificnv_expected_xx_cn    = params.pipelines_testdata_base_path + 'reference/expected_cn.hg38.XX.bed'
    hificnv_excluded_regions  = params.pipelines_testdata_base_path + 'reference/empty.bed'
    par_regions               = params.pipelines_testdata_base_path + 'reference/hs38.PAR.bed'
    qc_regions                = params.pipelines_testdata_base_path + 'reference/test_data.bed'
    snv_call_regions          = params.pipelines_testdata_base_path + 'reference/test_data.bed'
    str_bed                   = params.pipelines_testdata_base_path + 'reference/pathogenic_repeats.hg38.bed'
    stranger_repeat_catalog   = params.pipelines_testdata_base_path + 'reference/variant_catalog_grch38.json'
    sv_call_regions           = params.pipelines_testdata_base_path + 'reference/test_data.bed'
    vep_cache                 = params.pipelines_testdata_base_path + 'reference/vep_cache_test_data.tar.gz'
    vep_plugin_files          = params.pipelines_testdata_base_path + 'reference/vep_plugin_files.csv'
    echtvar_snv_databases     = params.pipelines_testdata_base_path + 'testdata/snp_dbs.csv'
    svdb_sv_databases         = params.pipelines_testdata_base_path + 'testdata/svdb_dbs.csv'
    genmod_reduced_penetrance = params.pipelines_testdata_base_path + 'reference/reduced_penetrance.tsv'
    genmod_score_config_snvs  = params.pipelines_testdata_base_path + 'reference/rank_model_snv.ini'
    genmod_score_config_svs   = params.pipelines_testdata_base_path + 'reference/rank_model_svs.ini'
    variant_consequences_snvs = params.pipelines_testdata_base_path + 'reference/variant_consequences_v2.txt'
    variant_consequences_svs  = params.pipelines_testdata_base_path + 'reference/variant_consequences_v2.txt'
    somalier_sites            = params.pipelines_testdata_base_path + 'reference/somalier_sites.vcf.gz'
    peddy_sites               = params.pipelines_testdata_base_path + 'reference/peddy.sites'


    // Pipeline options
    alignment_processes       = 2
    snv_calling_processes     = 2
    preset                    = "revio"
    sv_callers_to_run         = "sniffles,hificnv,severus"

    // Test config options
    extra_modkit_options      = '--seed 1 --sampling-frac 0.1'
    extra_vep_options         = '--plugin SpliceAI,snv=spliceai_21_scores_raw_snv_-v1.3-.vcf.gz,indel=spliceai_21_scores_raw_snv_-v1.3-.vcf.gz'
    extra_paraphase_options   = '--gene hba,OR1D5'
    extra_hifiasm_options     = '-f0 -k30 -w30 -D10 -r1 -N1'
    extra_yak_options         = '-b0'

}

// Impose same minimum Nextflow version as in nextflow.config
manifest {
    nextflowVersion = '!>=24.04.2'
}

// Disable all Nextflow reporting options
timeline { enabled = false }
report   { enabled = false }
trace    { enabled = false }
dag      { enabled = false }

process {
    resourceLimits = [
        cpus: 4,
        memory: '15.GB',
        time: '1.h'
    ]
    withLabel: 'process_high' {
        cpus = 4
        memory = '15.GB'
    }
    withLabel: 'process_medium' {
        cpus = 2
        memory = '7.GB'
    }
    withLabel: 'process_low' {
        cpus = 1
        memory = '3.GB'
    }
    withLabel: 'process_single' {
        cpus = 1
        memory = '3.GB'
    }
}

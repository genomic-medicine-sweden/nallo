nextflow_workflow {

    name "Test Workflow GENOME_ASSEMBLY"
    script "../main.nf"
    config "./nextflow.config"
    workflow "GENOME_ASSEMBLY"

    test("one sample, hifi-only mode") {
        when {
            workflow {
                """
                input[0] = Channel.of(
                    [
                        [ id: 'test_fastq', n_files: 1, relationship: 'unknown' ],
                        file(params.pipelines_testdata_base_path + 'testdata/HG002_PacBio_Revio.fastq.gz', checkIfExists: true)
                    ]
                )
                input[1] = false
                """
            }
        }
        then {
            assertAll(
                { assert workflow.success },
                { assert workflow.out.assembled_haplotypes.size() == 2 },
                { assert workflow.trace.succeeded().size() == 3 }, // 3 tasks: 1x HIFIASM 2x GFASTATS
                { assert snapshot(workflow.out).match() }
            )
        }
    }

    test("child with two parents, trio-binning mode") {

        tag "x"

        setup {
            run("SAMTOOLS_FASTQ") {
                script "../../../../modules/nf-core/samtools/fastq/main.nf"
                process {
                    """
                    input[0] = Channel.of(
                        [
                            [ id: 'HG002', n_files: 1, relationship: 'child', family_id: 'NIST', two_parents: true ],
                            file(params.pipelines_testdata_base_path + 'testdata/HG002_PacBio_Revio.bam', checkIfExists: true)
                        ],
                        [
                            [ id: 'HG003', n_files: 1, relationship: 'father', family_id: 'NIST', has_other_parent: true ],
                            file(params.pipelines_testdata_base_path + 'testdata/HG003_PacBio_Revio.bam', checkIfExists: true)
                        ],
                        [
                            [ id: 'HG004', n_files: 1, relationship: 'mother', family_id: 'NIST', has_other_parent: true ],
                            file(params.pipelines_testdata_base_path + 'testdata/HG004_PacBio_Revio.bam', checkIfExists: true)
                        ]
                    )
                    input[1] = false
                    """
                }
            }
        }
        when {
            workflow {
                """
                input[0] = SAMTOOLS_FASTQ.out.other
                input[1] = true
                """
            }
        }
        then {
            assertAll(
                { assert workflow.success },
                //{ assert workflow.trace.succeeded().size() == 3 }, // 3 tasks: 3x HIFIASM 6x GFASTATS,
                //{ assert workflow.out.assembled_haplotypes.size() == 6 },
                { assert snapshot(workflow.out,
                workflow.out.versions.get(0).readLines(),
                workflow.out.assembled_haplotypes.size(),
                workflow.trace.succeeded().size() ).match() }
            )
        }
    }
}

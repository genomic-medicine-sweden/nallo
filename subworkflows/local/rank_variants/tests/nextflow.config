process {

    withName: 'PREPARE_GENOME:UNTAR_VEP_CACHE' {
        ext.prefix = { "${name}".contains('merged') ? './vep_cache/homo_sapiens_merged/' : './vep_cache/homo_sapiens/' }
    }

    withName: 'SHORT_VARIANT_CALLING:DEEPVARIANT' {
        ext.prefix = { intervals ? "${meta.id}_${intervals}_deepvariant" : "${meta.id}_deepvariant" }
        ext.args = { [
            '--model_type WGS',
            "--sample_name=${meta.id}",
            '-vcf_stats_report=False'
        ].join(' ') }
    }

    withName: 'SHORT_VARIANT_CALLING:GLNEXUS' {
        ext.args = '--config DeepVariant_unfiltered'
    }

    withName: 'SHORT_VARIANT_CALLING:BCFTOOLS_CONCAT' {
        ext.prefix = { "${meta.id}_concat" }
        ext.args = [
            '--no-version',
            '--allow-overlaps'
        ].join(' ')
    }

    withName: 'SHORT_VARIANT_CALLING:BCFTOOLS_NORM_MULTISAMPLE' {
        ext.prefix = { "${meta.id}_norm_multisample" }
        ext.args = [
            '--no-version',
            '-m -',
            '--output-type u',
            '--write-index=csi',
            '-w 10000'
        ].join(' ')
    }

    withName: 'SHORT_VARIANT_CALLING:BCFTOOLS_NORM_SINGLESAMPLE' {
        ext.prefix = { "${meta.id}_norm_singlesample" }
        ext.args = [
            '--no-version',
            '-m -',
            '-w 10000',
            '--output-type u',
        ].join(' ')
    }

    withName: 'SHORT_VARIANT_CALLING:BCFTOOLS_FILLTAGS' {
        ext.prefix = { "${meta.id}_ac" }
        ext.args = [
            '--no-version',
            '--output-type u'
        ].join(' ')
    }

    withName: 'SNV_ANNOTATION:BCFTOOLS_FILLTAGS_ANNO' {
        ext.prefix = { "${meta.id}_filltags_anno" }
        ext.args = [
            '--no-version',
            '--output-type z'
        ].join(' ')
    }

    withName: 'MINIMAP2_ALIGN' {
        ext.args = '-x map-hifi'
    }

    withName: 'SNV_ANNOTATION:ENSEMBLVEP_SNV' {
        ext.args = { [
            "--dir_plugins .",
            "--plugin LoFtool,LoFtool_scores.txt",
            "--plugin pLI,pLI_values.txt",
            '--distance 5000',
            '--buffer_size 20000',
            '--format vcf --max_sv_size 248387328',
            '--appris --biotype --cache --canonical --ccds --compress_output bgzip',
            '--domains --exclude_predicted --force_overwrite',
            '--hgvs --humdiv --no_progress --numbers',
            '--polyphen p --protein --offline --regulatory --sift p --symbol --tsl',
            '--uniprot --vcf',
            '--no_stats'
        ].join(' ') }
    }

    withName: 'ANNOTATE_CSQ_PLI:ADD_MOST_SEVERE_PLI' {
        ext.prefix = { "${meta.id}_add_most_severe_pli" }
    }

    withName: 'ANNOTATE_CSQ_PLI:ADD_MOST_SEVERE_CSQ' {
        ext.prefix = { "${meta.id}_add_most_severe_csq" }
    }

    withName: 'RANK_VARIANTS:GENMOD_ANNOTATE' {
        ext.prefix = { "${meta.id}_genmod_annotate" }
        ext.args = { [
            '--annotate_regions',
            '--genome-build 38',
            '--temp_dir ./'
            ].join(' ') }
    }

    withName: 'RANK_VARIANTS:GENMOD_MODELS' {
        ext.prefix = { "${meta.id}_genmod_models" }
        ext.args = "--whole_gene --temp_dir ./"
    }

    withName: 'RANK_VARIANTS:GENMOD_SCORE' {
        ext.prefix = { "${meta.id}_genmod_score" }
        ext.args = "--rank_results"
    }

    withName: 'RANK_VARIANTS:GENMOD_COMPOUND' {
        ext.prefix = { "${meta.id}_genmod_compound" }
        ext.args = "--temp_dir ./"
    }
}

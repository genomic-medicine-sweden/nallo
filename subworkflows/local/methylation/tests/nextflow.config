params {
    preset = "pacbio"
}

process {
    withName: 'PREPARE_GENOME:UNTAR_VEP_CACHE' {
        ext.prefix = { "${name}".contains('merged') ? './vep_cache/homo_sapiens_merged/' : './vep_cache/homo_sapiens/' }
    }
    withName: 'SHORT_VARIANT_CALLING:DEEPVARIANT' {
        ext.prefix = { intervals ? "${meta.id}_${intervals}_deepvariant" : "${meta.id}_deepvariant" }
        ext.args = { [
            '--model_type WGS',
            "--sample_name=${meta.id}",
            '-vcf_stats_report=False'
        ].join(' ') }
    }

    withName: 'SHORT_VARIANT_CALLING:GLNEXUS' {
        ext.args = '--config DeepVariant_unfiltered'
    }

    withName: 'SHORT_VARIANT_CALLING:BCFTOOLS_CONCAT' {
        ext.prefix = { "${meta.id}_concat" }
        ext.args = [
            '--no-version',
            '--allow-overlaps'
        ].join(' ')
    }

    withName: 'SHORT_VARIANT_CALLING:BCFTOOLS_NORM_MULTISAMPLE' {
        ext.prefix = { "${meta.id}_norm_multisample" }
        ext.args = [
            '--no-version',
            '-m -',
            '--output-type z',
            '--write-index=tbi',
            '-w 10000'
        ].join(' ')
    }

    withName: 'SHORT_VARIANT_CALLING:BCFTOOLS_NORM_SINGLESAMPLE' {
        ext.prefix = { "${meta.id}_norm_singlesample" }
        ext.args = [
            '--no-version',
            '-m -',
            '-w 10000',
            '--output-type z',
            '--write-index=tbi',
        ].join(' ')
    }

    withName: 'SHORT_VARIANT_CALLING:BCFTOOLS_FILLTAGS' {
        ext.prefix = { "${meta.id}_ac" }
        ext.args = [
            '--no-version',
            '--output-type u'
        ].join(' ')
    }

    withName: 'MINIMAP2_ALIGN' {
        ext.args = '-x map-hifi'
    }


    withName: 'METHYLATION:MODKIT_PILEUP' {
        ext.args = { [
            "${params.extra_modkit_options}",
            '--combine-mods',
            '--cpg',
            '--combine-strands',
            !params.skip_phasing_wf ? '--partition-tag HP' : '',
        ].join(' ') }
        ext.prefix = { "${meta.id}_modkit_pileup" }
    }


    withName: 'METHYLATION:TABIX_BGZIPTABIX' {
        ext.prefix = { "${input.simpleName}" }
    }

    withName: 'PHASING:HIPHASE' {
        ext.args = { [
            '--ignore-read-groups',
            "--stats-file ${meta.id}_phased.stats.tsv",
            "--blocks-file ${meta.id}_phased.blocks.tsv",
            "--summary-file ${meta.id}_phased.summary.tsv"
        ].join(' ') }
    }

    withName: 'PHASING:LONGPHASE_PHASE' {
        ext.prefix = { "${meta.id}_phased" }
        ext.args = [
            params.preset.equals('ONT_R10') ? "--ont" : "--pb",
            '--indels'
        ].join(' ')
    }

    withName: 'PHASING:LONGPHASE_HAPLOTAG' {
        ext.prefix = { "${meta.id}_haplotagged" }
    }

    withName: 'PHASING:WHATSHAP_PHASE' {
        ext.prefix = { "${meta.id}_phased" }
        ext.args = [
            '--ignore-read-groups',
            '--indels',
            '--use-supplementary'
        ].join(' ')
    }

    withName: 'PHASING:WHATSHAP_STATS' {
        ext.prefix = { "${meta.id}_stats" }
    }

    withName: 'PHASING:WHATSHAP_HAPLOTAG' {
        ext.prefix = { "${meta.id}_haplotagged" }
        ext.args = [
            '--ignore-read-groups',
            '--tag-supplementary'
        ].join(' ')
    }

    withName: 'PHASING:CRAMINO_PHASED' {
        ext.args = [
            '--karyotype',
            '--phased'
        ].join(' ')
        ext.prefix = { "${meta.id}_cramino_aligned_phased" }
    }
}
